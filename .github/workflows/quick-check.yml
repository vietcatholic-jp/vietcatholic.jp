name: Quick Check - Fast Build Validation

on:
  push:
    branches: [ main, staging, 'feature/**', 'fix/**', 'hotfix/**' ]
  pull_request:
    branches: [ main, staging ]

jobs:
  quick-validation:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit
      
    - name: Quick lint check
      run: |
        echo "üîç Running quick lint check..."
        npm run lint -- --max-warnings 10
        
    - name: TypeScript check
      run: |
        echo "üìù Checking TypeScript..."
        npx tsc --noEmit --skipLibCheck
        
    - name: Build check
      run: |
        echo "üèóÔ∏è Testing build..."
        npm run build
        
    - name: Validate build output
      run: |
        echo "‚úÖ Validating build output..."
        
        # Basic checks
        [ -d ".next" ] || { echo "‚ùå .next directory missing"; exit 1; }
        [ -d ".next/static" ] || { echo "‚ùå Static files missing"; exit 1; }
        [ -f ".next/BUILD_ID" ] || { echo "‚ùå Build ID missing"; exit 1; }
        
        # Check for critical pages
        [ -f ".next/server/app/page.js" ] || { echo "‚ùå Home page missing"; exit 1; }
        
        echo "‚úÖ Build validation passed!"
        
    - name: Quick summary
      if: always()
      run: |
        echo "## Quick Check Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ **All checks passed!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Linting: ‚úÖ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript: ‚úÖ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Build: ‚úÖ Passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "‚ùå **Some checks failed**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please check the logs above and fix any issues." >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Info" >> $GITHUB_STEP_SUMMARY
        echo "- Node.js: $(node --version)" >> $GITHUB_STEP_SUMMARY
        echo "- npm: $(npm --version)" >> $GITHUB_STEP_SUMMARY
        echo "- Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

  dependency-check:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Check package.json
      run: |
        echo "üì¶ Checking package.json..."
        
        # Validate JSON
        if ! jq empty package.json; then
          echo "‚ùå package.json is invalid JSON"
          exit 1
        fi
        
        # Check for required fields
        if ! jq -e '.name' package.json > /dev/null; then
          echo "‚ùå package.json missing name field"
          exit 1
        fi
        
        if ! jq -e '.scripts.build' package.json > /dev/null; then
          echo "‚ùå package.json missing build script"
          exit 1
        fi
        
        echo "‚úÖ package.json is valid"
        
    - name: Check for security issues
      run: |
        echo "üîí Checking for security issues..."
        
        # Install dependencies first
        npm ci --prefer-offline --no-audit
        
        # Run audit (allow moderate issues, fail on high/critical)
        if npm audit --audit-level=high; then
          echo "‚úÖ No high or critical security vulnerabilities found"
        else
          echo "‚ùå High or critical security vulnerabilities detected"
          echo "Please run 'npm audit fix' to resolve issues"
          exit 1
        fi

  status-check:
    runs-on: ubuntu-latest
    needs: [quick-validation, dependency-check]
    if: always()
    
    steps:
    - name: Final status
      run: |
        echo "## Final Status Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        VALIDATION_STATUS="${{ needs.quick-validation.result }}"
        DEPENDENCY_STATUS="${{ needs.dependency-check.result }}"
        
        if [ "$VALIDATION_STATUS" == "success" ]; then
          echo "‚úÖ **Quick Validation**: Passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "‚ùå **Quick Validation**: Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "$DEPENDENCY_STATUS" == "success" ]; then
          echo "‚úÖ **Dependency Check**: Passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "‚ùå **Dependency Check**: Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "$VALIDATION_STATUS" == "success" ] && [ "$DEPENDENCY_STATUS" == "success" ]; then
          echo "üéâ **All checks passed!** Your code is ready for review." >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ Overall Status: PASSED"
        else
          echo "‚ö†Ô∏è **Some checks failed.** Please review and fix the issues above." >> $GITHUB_STEP_SUMMARY
          echo "‚ùå Overall Status: FAILED"
          exit 1
        fi
