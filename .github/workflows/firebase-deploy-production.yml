name: üöÄ Deploy to Production
# Production deployment workflow with proper service account permissions

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: üî• Deploy to Firebase App Hosting (Production)
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: üì¶ Install dependencies
      run: npm ci

    - name: üîç Lint code
      run: npm run lint

    - name: üèóÔ∏è Build application
      run: npm run build
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

    - name: üîê Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.DEPLOY_GOOGLE_CREDENTIAL }}

    - name: ‚òÅÔ∏è Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: üîß Setup Firebase CLI
      run: npm install -g firebase-tools

    - name: üìù Create production firebase.json
      run: |
        cat > firebase.json << 'EOF'
        {
          "apphosting": [
            {
              "backendId": "daihoiconggiaojp-prod",
              "rootDir": "/",
              "ignore": [
                "node_modules",
                ".git",
                "firebase-debug.log",
                "firebase-debug.*.log",
                "functions",
                "tests",
                "docs",
                "scripts",
                "*.md",
                ".env*"
              ]
            }
          ]
        }
        EOF

    - name: üîç Check if production backend exists
      id: check_backend
      run: |
        firebase use daihoiconggiaojp-prod
        if firebase apphosting:backends:list | grep -q "daihoiconggiaojp-prod"; then
          echo "backend_exists=true" >> $GITHUB_OUTPUT
        else
          echo "backend_exists=false" >> $GITHUB_OUTPUT
        fi
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

    - name: üöÄ Deploy to Firebase App Hosting (Production)
      if: steps.check_backend.outputs.backend_exists == 'true'
      run: |
        firebase use daihoiconggiaojp-prod
        firebase deploy --only apphosting --token "$FIREBASE_TOKEN" --non-interactive --force
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

    - name: ‚ö†Ô∏è Production backend not found
      if: steps.check_backend.outputs.backend_exists == 'false'
      run: |
        echo "Production backend 'daihoiconggiaojp-prod' does not exist."
        echo "Please create the backend manually in Firebase Console first."
        echo "Skipping deployment to avoid interactive prompts."
